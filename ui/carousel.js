// Generated by CoffeeScript 1.6.3
(function() {
  define(['jquery', 'flight/lib/component', 'image-helper', 'jquery-smoothdivscroll'], function($, defineComponent, imageHelper) {
    var carousel;
    carousel = function() {
      var _photos;
      _photos = void 0;
      this.defaultAttrs({
        scrollableSelector: '#makeMeScrollable',
        propertyThumbSelector: "#property_thumb_non_carousel"
      });
      this.hide = function() {
        this.$node.hide();
        return this.select('propertyThumbSelector').show();
      };
      this.show = function() {
        this.$node.show();
        this.select('propertyThumbSelector').hide();
        return this.addPhotosToCarousel();
      };
      this.addPhotosToCarousel = function() {
        var photo, _i, _len, _results;
        this.pendingImages = _photos.length;
        this.carousel = [];
        _results = [];
        for (_i = 0, _len = _photos.length; _i < _len; _i++) {
          photo = _photos[_i];
          _results.push(this.addCarouselPhoto(photo));
        }
        return _results;
      };
      this.addCarouselPhoto = function(photo) {
        var img, path;
        path = imageHelper.url(photo.path, null, 250);
        img = new Image();
        this.carousel.push(img);
        img.onerror = this.onImageError;
        img.onload = this.onImageLoaded.bind(this);
        img.src = path;
        return $(img).addClass('carouselPhoto');
      };
      this.onImageError = function() {
        return this.src = imageHelper.notFoundURL();
      };
      this.onImageLoaded = function() {
        this.pendingImages -= 1;
        if (this.pendingImages > 0) {
          return;
        }
        return this.finalizeCarousel();
      };
      this.finalizeCarousel = function() {
        var img, scrollable, _i, _len, _ref;
        scrollable = this.select('scrollableSelector');
        _ref = this.carousel;
        for (_i = 0, _len = _ref.length; _i < _len; _i++) {
          img = _ref[_i];
          scrollable.append(img);
        }
        scrollable.smoothDivScroll({
          autoScrollingMode: "always",
          autoScrollingDirection: "endlessloopright",
          autoScrollingStep: 1,
          autoScrollingInterval: 15
        });
        scrollable.smoothDivScroll("recalculateScrollableArea");
        return scrollable.smoothDivScroll("startAutoScrolling");
      };
      this.pauseCarousel = function() {
        return this.select('scrollableSelector').smoothDivScroll("stopAutoScrolling");
      };
      this.resumeCarousel = function() {
        return this.select('scrollableSelector').smoothDivScroll("startAutoScrolling");
      };
      this.render = function(ev, listing) {
        _photos = listing.photos();
        if (listing.data.hide_carousel) {
          return this.hide();
        } else {
          return this.show();
        }
      };
      this.run = function(ev, listing) {
        return this.trigger('uiCarouselRequested', listing);
      };
      return this.after('initialize', function() {
        if (!this.select('scrollableSelector').length) {
          return;
        }
        this.on(document, 'dataCarouselServed', this.render);
        this.on(document, 'uiCarouselPause', this.pauseCarousel);
        this.on(document, 'uiCarouselResume', this.resumeCarousel);
        return this.on('uiClassicCarouselRun', this.run);
      });
    };
    return defineComponent(carousel);
  });

}).call(this);
